#include <list> 


STL Containers
You have learned about vectors and maps in the past. These are two of the container classes available to you built into C++. More types are deques (doubly-ended queues, or basically a dynamic array), lists (a doubly-ended linked list), and a forward_list (singly-ended linked list). Just like with vectors and maps, lists have many of the same function names that the previous containers have:
	begin()		returns the pointer to the beginning of the container
	clear()		empties a container
	empty() 	returns a Boolean if the container is empty
	end()		returns the pointer past the end of the container
	erase()		removes an element at a given position (passed in by an iterator)
	pop_back()	removes/pops an element from the back of the container
	pop_front()	removes/pops an element from the front of the container
	push_back()	inserts/pushes an element into the back of the container
	push_front()	inserts/pushes an element into the front of the container
	size()		returns an integer of the number of elements in the container


Iterators also work the same:
vector<type>::iterator		
map<type,type>::iterator		
list<type>::iterator
